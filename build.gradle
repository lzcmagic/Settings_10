buildscript {
    ext.kotlin_version = '1.6.10'
    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
        classpath PROTOBUF_CLASS_PATH
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

//final String ANDROID_TOP = "${rootDir}"
//final String FRAMEWORK_PREBUILTS_DIR = "${ANDROID_TOP}/prebuilts/framework_intermediates/"

apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion COMPILE_SDK
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.android.settings1"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 100000
        versionName "11111.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    sourceSets {
        main {
            res.srcDirs = ['res']
            java.srcDirs = ['src']
            manifest.srcFile 'AndroidManifest.xml'
            proto {
                srcDir 'protos/'
            }
        }

//        debug {
//            manifest.srcFile "AndroidManifest.xml"
//        }



//        androidTestDebug {
//            manifest.srcFile "tests/AndroidManifest.xml"
//        }
//
//        aosp {
//            java.srcDirs = ['src_flags', 'src_shortcuts_overrides']
//            manifest.srcFile "AndroidManifest.xml"
//        }
//
//        l3go {
//            res.srcDirs = ['go/res']
//            java.srcDirs = ['go/src']
//            manifest.srcFile "go/AndroidManifest.xml"
//        }
//
//
//        withoutQuickstep {
//            java.srcDirs = ['src_ui_overrides']
//        }
//
//        withQuickstep {
//            java.srcDirs = ['quickstep/src', 'quickstep/recents_ui_overrides/src']
//            res.srcDirs = ['quickstep/res', 'quickstep/recents_ui_overrides/res']
//            manifest.srcFile "quickstep/AndroidManifest.xml"
//        }
//
//
//        withQuickstepIconRecents {
//            res.srcDirs = ['quickstep/res', 'go/quickstep/res']
//            java.srcDirs = ['quickstep/src', 'go/quickstep/src']
//            manifest.srcFile "quickstep/AndroidManifest.xml"
//        }
    }
}

repositories {
//    maven { url "../../../prebuilts/fullsdk-darwin/extras/android/m2repository" }
//    maven { url "../../../prebuilts/fullsdk-linux/extras/android/m2repository" }
    mavenCentral()
    google()
}

dependencies {
//    implementation "androidx.dynamicanimation:dynamicanimation:${ANDROID_X_VERSION}"
//    implementation "androidx.recyclerview:recyclerview:${ANDROID_X_VERSION}"
    implementation "androidx.preference:preference:${ANDROID_X_VERSION}"

    implementation("com.google.android.material:material:1.0.0")
    implementation project(':SettingsLib')
    implementation project(':setupcompat')
    implementation project(':setupdesign')
    implementation("androidx.slice:slice-view:1.0.0")
    implementation("androidx.slice:slice-core:1.0.0")
    implementation("androidx.slice:slice-builders:1.1.0-alpha02")
    implementation("androidx.constraintlayout:constraintlayout-solver:2.0.4")
    implementation("android.arch.lifecycle:runtime:1.1.1")
    implementation("android.arch.lifecycle:extensions:1.1.1")
    implementation("androidx.constraintlayout:constraintlayout:2.1.3")
    implementation 'com.google.zxing:core:1.7'
    implementation("androidx.appcompat:appcompat:1.0.0")

    implementation("com.google.guava:guava:31.1-android")
//    implementation 'com.google.protobuf:protobuf-lite:3.0.0'
    implementation 'com.google.protobuf:protobuf-javalite:3.8.0'
    implementation project(":SettingsLib-search")
}
protobuf {
    // Configure the protoc executable
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
                java {
                    option "lite"
                }
            }
        }
    }

}
